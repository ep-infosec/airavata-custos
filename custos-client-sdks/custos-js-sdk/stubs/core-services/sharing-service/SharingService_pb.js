// source: src/main/proto/SharingService.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.org.apache.custos.sharing.service.Entities', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.Entity', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.EntityRequest', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.EntitySearchField', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.EntityType', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.EntityTypeRequest', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.EntityTypes', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.PermissionRequest', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.PermissionType', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.PermissionTypeRequest', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.PermissionTypes', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.SearchCondition', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.SearchCriteria', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.SearchRequest', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.SharedOwners', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.SharingRequest', null, global);
goog.exportSymbol('proto.org.apache.custos.sharing.service.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.EntityType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.EntityType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.EntityType.displayName = 'proto.org.apache.custos.sharing.service.EntityType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.PermissionType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.PermissionType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.PermissionType.displayName = 'proto.org.apache.custos.sharing.service.PermissionType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.Entity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.Entity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.Entity.displayName = 'proto.org.apache.custos.sharing.service.Entity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.EntityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.EntityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.EntityRequest.displayName = 'proto.org.apache.custos.sharing.service.EntityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.EntityTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.EntityTypeRequest.displayName = 'proto.org.apache.custos.sharing.service.EntityTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.PermissionTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.PermissionTypeRequest.displayName = 'proto.org.apache.custos.sharing.service.PermissionTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.SearchCriteria = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.SearchCriteria, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.SearchCriteria.displayName = 'proto.org.apache.custos.sharing.service.SearchCriteria';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.custos.sharing.service.SearchRequest.repeatedFields_, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.SearchRequest.displayName = 'proto.org.apache.custos.sharing.service.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.PermissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.PermissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.PermissionRequest.displayName = 'proto.org.apache.custos.sharing.service.PermissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.SharingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.custos.sharing.service.SharingRequest.repeatedFields_, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.SharingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.SharingRequest.displayName = 'proto.org.apache.custos.sharing.service.SharingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.Status.displayName = 'proto.org.apache.custos.sharing.service.Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.EntityTypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.custos.sharing.service.EntityTypes.repeatedFields_, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.EntityTypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.EntityTypes.displayName = 'proto.org.apache.custos.sharing.service.EntityTypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.PermissionTypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.custos.sharing.service.PermissionTypes.repeatedFields_, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.PermissionTypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.PermissionTypes.displayName = 'proto.org.apache.custos.sharing.service.PermissionTypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.Entities = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.custos.sharing.service.Entities.repeatedFields_, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.Entities, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.Entities.displayName = 'proto.org.apache.custos.sharing.service.Entities';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.custos.sharing.service.SharedOwners = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.custos.sharing.service.SharedOwners.repeatedFields_, null);
};
goog.inherits(proto.org.apache.custos.sharing.service.SharedOwners, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.custos.sharing.service.SharedOwners.displayName = 'proto.org.apache.custos.sharing.service.SharedOwners';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.EntityType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.EntityType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.EntityType.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.EntityType}
 */
proto.org.apache.custos.sharing.service.EntityType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.EntityType;
  return proto.org.apache.custos.sharing.service.EntityType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.EntityType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.EntityType}
 */
proto.org.apache.custos.sharing.service.EntityType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.EntityType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.EntityType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.EntityType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.EntityType} returns this
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.EntityType} returns this
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.EntityType} returns this
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 created_at = 4;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.EntityType} returns this
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 updated_at = 5;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.EntityType} returns this
 */
proto.org.apache.custos.sharing.service.EntityType.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.PermissionType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.PermissionType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.PermissionType.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.PermissionType}
 */
proto.org.apache.custos.sharing.service.PermissionType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.PermissionType;
  return proto.org.apache.custos.sharing.service.PermissionType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.PermissionType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.PermissionType}
 */
proto.org.apache.custos.sharing.service.PermissionType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.PermissionType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.PermissionType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.PermissionType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionType} returns this
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionType} returns this
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionType} returns this
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 created_at = 4;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionType} returns this
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 updated_at = 5;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionType} returns this
 */
proto.org.apache.custos.sharing.service.PermissionType.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.Entity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.Entity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.Entity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ownerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    binaryData: msg.getBinaryData_asB64(),
    fullText: jspb.Message.getFieldWithDefault(msg, 8, ""),
    originalCreationTime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 10, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 11, 0),
    sharedCount: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.Entity}
 */
proto.org.apache.custos.sharing.service.Entity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.Entity;
  return proto.org.apache.custos.sharing.service.Entity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.Entity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.Entity}
 */
proto.org.apache.custos.sharing.service.Entity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBinaryData(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullText(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOriginalCreationTime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSharedCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.Entity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.Entity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.Entity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParentId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBinaryData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getFullText();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOriginalCreationTime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getSharedCount();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string owner_id = 3;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string parent_id = 4;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bytes binary_data = 7;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getBinaryData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes binary_data = 7;
 * This is a type-conversion wrapper around `getBinaryData()`
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getBinaryData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBinaryData()));
};


/**
 * optional bytes binary_data = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinaryData()`
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getBinaryData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBinaryData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setBinaryData = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional string full_text = 8;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getFullText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setFullText = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 original_creation_time = 9;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getOriginalCreationTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setOriginalCreationTime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 created_at = 10;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 updated_at = 11;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 shared_count = 12;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.Entity.prototype.getSharedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.Entity} returns this
 */
proto.org.apache.custos.sharing.service.Entity.prototype.setSharedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.EntityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.EntityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.EntityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tenantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entity: (f = msg.getEntity()) && proto.org.apache.custos.sharing.service.Entity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.EntityRequest}
 */
proto.org.apache.custos.sharing.service.EntityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.EntityRequest;
  return proto.org.apache.custos.sharing.service.EntityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.EntityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.EntityRequest}
 */
proto.org.apache.custos.sharing.service.EntityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTenantId(value);
      break;
    case 3:
      var value = new proto.org.apache.custos.sharing.service.Entity;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.Entity.deserializeBinaryFromReader);
      msg.setEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.EntityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.EntityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.EntityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEntity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.org.apache.custos.sharing.service.Entity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.EntityRequest} returns this
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 tenant_id = 2;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.getTenantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.EntityRequest} returns this
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Entity entity = 3;
 * @return {?proto.org.apache.custos.sharing.service.Entity}
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.getEntity = function() {
  return /** @type{?proto.org.apache.custos.sharing.service.Entity} */ (
    jspb.Message.getWrapperField(this, proto.org.apache.custos.sharing.service.Entity, 3));
};


/**
 * @param {?proto.org.apache.custos.sharing.service.Entity|undefined} value
 * @return {!proto.org.apache.custos.sharing.service.EntityRequest} returns this
*/
proto.org.apache.custos.sharing.service.EntityRequest.prototype.setEntity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.custos.sharing.service.EntityRequest} returns this
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.clearEntity = function() {
  return this.setEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.EntityRequest.prototype.hasEntity = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.EntityTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.EntityTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tenantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entityType: (f = msg.getEntityType()) && proto.org.apache.custos.sharing.service.EntityType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.EntityTypeRequest}
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.EntityTypeRequest;
  return proto.org.apache.custos.sharing.service.EntityTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.EntityTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.EntityTypeRequest}
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTenantId(value);
      break;
    case 3:
      var value = new proto.org.apache.custos.sharing.service.EntityType;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.EntityType.deserializeBinaryFromReader);
      msg.setEntityType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.EntityTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.EntityTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEntityType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.org.apache.custos.sharing.service.EntityType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.EntityTypeRequest} returns this
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 tenant_id = 2;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.getTenantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.EntityTypeRequest} returns this
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional EntityType entity_type = 3;
 * @return {?proto.org.apache.custos.sharing.service.EntityType}
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.getEntityType = function() {
  return /** @type{?proto.org.apache.custos.sharing.service.EntityType} */ (
    jspb.Message.getWrapperField(this, proto.org.apache.custos.sharing.service.EntityType, 3));
};


/**
 * @param {?proto.org.apache.custos.sharing.service.EntityType|undefined} value
 * @return {!proto.org.apache.custos.sharing.service.EntityTypeRequest} returns this
*/
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.setEntityType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.custos.sharing.service.EntityTypeRequest} returns this
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.clearEntityType = function() {
  return this.setEntityType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.EntityTypeRequest.prototype.hasEntityType = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.PermissionTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.PermissionTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tenantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    permissionType: (f = msg.getPermissionType()) && proto.org.apache.custos.sharing.service.PermissionType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypeRequest}
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.PermissionTypeRequest;
  return proto.org.apache.custos.sharing.service.PermissionTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.PermissionTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypeRequest}
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTenantId(value);
      break;
    case 3:
      var value = new proto.org.apache.custos.sharing.service.PermissionType;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.PermissionType.deserializeBinaryFromReader);
      msg.setPermissionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.PermissionTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.PermissionTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPermissionType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.org.apache.custos.sharing.service.PermissionType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypeRequest} returns this
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 tenant_id = 2;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.getTenantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypeRequest} returns this
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PermissionType permission_type = 3;
 * @return {?proto.org.apache.custos.sharing.service.PermissionType}
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.getPermissionType = function() {
  return /** @type{?proto.org.apache.custos.sharing.service.PermissionType} */ (
    jspb.Message.getWrapperField(this, proto.org.apache.custos.sharing.service.PermissionType, 3));
};


/**
 * @param {?proto.org.apache.custos.sharing.service.PermissionType|undefined} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypeRequest} returns this
*/
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.setPermissionType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypeRequest} returns this
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.clearPermissionType = function() {
  return this.setPermissionType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.PermissionTypeRequest.prototype.hasPermissionType = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.SearchCriteria.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.SearchCriteria.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.SearchCriteria} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.SearchCriteria.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchField: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.SearchCriteria}
 */
proto.org.apache.custos.sharing.service.SearchCriteria.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.SearchCriteria;
  return proto.org.apache.custos.sharing.service.SearchCriteria.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.SearchCriteria} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.SearchCriteria}
 */
proto.org.apache.custos.sharing.service.SearchCriteria.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.org.apache.custos.sharing.service.EntitySearchField} */ (reader.readEnum());
      msg.setSearchField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {!proto.org.apache.custos.sharing.service.SearchCondition} */ (reader.readEnum());
      msg.setCondition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.SearchCriteria.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.SearchCriteria.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.SearchCriteria} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.SearchCriteria.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchField();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCondition();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional EntitySearchField search_field = 1;
 * @return {!proto.org.apache.custos.sharing.service.EntitySearchField}
 */
proto.org.apache.custos.sharing.service.SearchCriteria.prototype.getSearchField = function() {
  return /** @type {!proto.org.apache.custos.sharing.service.EntitySearchField} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.org.apache.custos.sharing.service.EntitySearchField} value
 * @return {!proto.org.apache.custos.sharing.service.SearchCriteria} returns this
 */
proto.org.apache.custos.sharing.service.SearchCriteria.prototype.setSearchField = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.SearchCriteria.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.SearchCriteria} returns this
 */
proto.org.apache.custos.sharing.service.SearchCriteria.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SearchCondition condition = 3;
 * @return {!proto.org.apache.custos.sharing.service.SearchCondition}
 */
proto.org.apache.custos.sharing.service.SearchCriteria.prototype.getCondition = function() {
  return /** @type {!proto.org.apache.custos.sharing.service.SearchCondition} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.org.apache.custos.sharing.service.SearchCondition} value
 * @return {!proto.org.apache.custos.sharing.service.SearchCriteria} returns this
 */
proto.org.apache.custos.sharing.service.SearchCriteria.prototype.setCondition = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.custos.sharing.service.SearchRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tenantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ownerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 4, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    searchCriteriaList: jspb.Message.toObjectList(msg.getSearchCriteriaList(),
    proto.org.apache.custos.sharing.service.SearchCriteria.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest}
 */
proto.org.apache.custos.sharing.service.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.SearchRequest;
  return proto.org.apache.custos.sharing.service.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest}
 */
proto.org.apache.custos.sharing.service.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTenantId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 6:
      var value = new proto.org.apache.custos.sharing.service.SearchCriteria;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.SearchCriteria.deserializeBinaryFromReader);
      msg.addSearchCriteria(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSearchCriteriaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.org.apache.custos.sharing.service.SearchCriteria.serializeBinaryToWriter
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest} returns this
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 tenant_id = 2;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.getTenantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest} returns this
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string owner_id = 3;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest} returns this
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest} returns this
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 limit = 5;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest} returns this
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated SearchCriteria search_criteria = 6;
 * @return {!Array<!proto.org.apache.custos.sharing.service.SearchCriteria>}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.getSearchCriteriaList = function() {
  return /** @type{!Array<!proto.org.apache.custos.sharing.service.SearchCriteria>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.org.apache.custos.sharing.service.SearchCriteria, 6));
};


/**
 * @param {!Array<!proto.org.apache.custos.sharing.service.SearchCriteria>} value
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest} returns this
*/
proto.org.apache.custos.sharing.service.SearchRequest.prototype.setSearchCriteriaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.org.apache.custos.sharing.service.SearchCriteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.org.apache.custos.sharing.service.SearchCriteria}
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.addSearchCriteria = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.org.apache.custos.sharing.service.SearchCriteria, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.custos.sharing.service.SearchRequest} returns this
 */
proto.org.apache.custos.sharing.service.SearchRequest.prototype.clearSearchCriteriaList = function() {
  return this.setSearchCriteriaList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.PermissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.PermissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.PermissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tenantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entity: (f = msg.getEntity()) && proto.org.apache.custos.sharing.service.Entity.toObject(includeInstance, f),
    permissionType: (f = msg.getPermissionType()) && proto.org.apache.custos.sharing.service.PermissionType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.PermissionRequest}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.PermissionRequest;
  return proto.org.apache.custos.sharing.service.PermissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.PermissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.PermissionRequest}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTenantId(value);
      break;
    case 3:
      var value = new proto.org.apache.custos.sharing.service.Entity;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.Entity.deserializeBinaryFromReader);
      msg.setEntity(value);
      break;
    case 4:
      var value = new proto.org.apache.custos.sharing.service.PermissionType;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.PermissionType.deserializeBinaryFromReader);
      msg.setPermissionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.PermissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.PermissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.PermissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEntity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.org.apache.custos.sharing.service.Entity.serializeBinaryToWriter
    );
  }
  f = message.getPermissionType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.org.apache.custos.sharing.service.PermissionType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionRequest} returns this
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 tenant_id = 2;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.getTenantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionRequest} returns this
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Entity entity = 3;
 * @return {?proto.org.apache.custos.sharing.service.Entity}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.getEntity = function() {
  return /** @type{?proto.org.apache.custos.sharing.service.Entity} */ (
    jspb.Message.getWrapperField(this, proto.org.apache.custos.sharing.service.Entity, 3));
};


/**
 * @param {?proto.org.apache.custos.sharing.service.Entity|undefined} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionRequest} returns this
*/
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.setEntity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.custos.sharing.service.PermissionRequest} returns this
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.clearEntity = function() {
  return this.setEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.hasEntity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PermissionType permission_type = 4;
 * @return {?proto.org.apache.custos.sharing.service.PermissionType}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.getPermissionType = function() {
  return /** @type{?proto.org.apache.custos.sharing.service.PermissionType} */ (
    jspb.Message.getWrapperField(this, proto.org.apache.custos.sharing.service.PermissionType, 4));
};


/**
 * @param {?proto.org.apache.custos.sharing.service.PermissionType|undefined} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionRequest} returns this
*/
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.setPermissionType = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.custos.sharing.service.PermissionRequest} returns this
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.clearPermissionType = function() {
  return this.setPermissionType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.PermissionRequest.prototype.hasPermissionType = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.custos.sharing.service.SharingRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.SharingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.SharingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.SharingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tenantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entity: (f = msg.getEntity()) && proto.org.apache.custos.sharing.service.Entity.toObject(includeInstance, f),
    permissionType: (f = msg.getPermissionType()) && proto.org.apache.custos.sharing.service.PermissionType.toObject(includeInstance, f),
    ownerIdList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    cascade: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest}
 */
proto.org.apache.custos.sharing.service.SharingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.SharingRequest;
  return proto.org.apache.custos.sharing.service.SharingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.SharingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest}
 */
proto.org.apache.custos.sharing.service.SharingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTenantId(value);
      break;
    case 3:
      var value = new proto.org.apache.custos.sharing.service.Entity;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.Entity.deserializeBinaryFromReader);
      msg.setEntity(value);
      break;
    case 4:
      var value = new proto.org.apache.custos.sharing.service.PermissionType;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.PermissionType.deserializeBinaryFromReader);
      msg.setPermissionType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addOwnerId(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCascade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.SharingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.SharingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.SharingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEntity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.org.apache.custos.sharing.service.Entity.serializeBinaryToWriter
    );
  }
  f = message.getPermissionType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.org.apache.custos.sharing.service.PermissionType.serializeBinaryToWriter
    );
  }
  f = message.getOwnerIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getCascade();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 tenant_id = 2;
 * @return {number}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.getTenantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Entity entity = 3;
 * @return {?proto.org.apache.custos.sharing.service.Entity}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.getEntity = function() {
  return /** @type{?proto.org.apache.custos.sharing.service.Entity} */ (
    jspb.Message.getWrapperField(this, proto.org.apache.custos.sharing.service.Entity, 3));
};


/**
 * @param {?proto.org.apache.custos.sharing.service.Entity|undefined} value
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
*/
proto.org.apache.custos.sharing.service.SharingRequest.prototype.setEntity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.clearEntity = function() {
  return this.setEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.hasEntity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PermissionType permission_type = 4;
 * @return {?proto.org.apache.custos.sharing.service.PermissionType}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.getPermissionType = function() {
  return /** @type{?proto.org.apache.custos.sharing.service.PermissionType} */ (
    jspb.Message.getWrapperField(this, proto.org.apache.custos.sharing.service.PermissionType, 4));
};


/**
 * @param {?proto.org.apache.custos.sharing.service.PermissionType|undefined} value
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
*/
proto.org.apache.custos.sharing.service.SharingRequest.prototype.setPermissionType = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.clearPermissionType = function() {
  return this.setPermissionType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.hasPermissionType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string owner_id = 5;
 * @return {!Array<string>}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.getOwnerIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.setOwnerIdList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.addOwnerId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.clearOwnerIdList = function() {
  return this.setOwnerIdList([]);
};


/**
 * optional bool cascade = 6;
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.getCascade = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.org.apache.custos.sharing.service.SharingRequest} returns this
 */
proto.org.apache.custos.sharing.service.SharingRequest.prototype.setCascade = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.Status}
 */
proto.org.apache.custos.sharing.service.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.Status;
  return proto.org.apache.custos.sharing.service.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.Status}
 */
proto.org.apache.custos.sharing.service.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.org.apache.custos.sharing.service.Status.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.org.apache.custos.sharing.service.Status} returns this
 */
proto.org.apache.custos.sharing.service.Status.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.custos.sharing.service.EntityTypes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.EntityTypes.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.EntityTypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.EntityTypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.EntityTypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    typesList: jspb.Message.toObjectList(msg.getTypesList(),
    proto.org.apache.custos.sharing.service.EntityType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.EntityTypes}
 */
proto.org.apache.custos.sharing.service.EntityTypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.EntityTypes;
  return proto.org.apache.custos.sharing.service.EntityTypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.EntityTypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.EntityTypes}
 */
proto.org.apache.custos.sharing.service.EntityTypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.org.apache.custos.sharing.service.EntityType;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.EntityType.deserializeBinaryFromReader);
      msg.addTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.EntityTypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.EntityTypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.EntityTypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.EntityTypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.org.apache.custos.sharing.service.EntityType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EntityType types = 1;
 * @return {!Array<!proto.org.apache.custos.sharing.service.EntityType>}
 */
proto.org.apache.custos.sharing.service.EntityTypes.prototype.getTypesList = function() {
  return /** @type{!Array<!proto.org.apache.custos.sharing.service.EntityType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.org.apache.custos.sharing.service.EntityType, 1));
};


/**
 * @param {!Array<!proto.org.apache.custos.sharing.service.EntityType>} value
 * @return {!proto.org.apache.custos.sharing.service.EntityTypes} returns this
*/
proto.org.apache.custos.sharing.service.EntityTypes.prototype.setTypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.org.apache.custos.sharing.service.EntityType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.org.apache.custos.sharing.service.EntityType}
 */
proto.org.apache.custos.sharing.service.EntityTypes.prototype.addTypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.org.apache.custos.sharing.service.EntityType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.custos.sharing.service.EntityTypes} returns this
 */
proto.org.apache.custos.sharing.service.EntityTypes.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.custos.sharing.service.PermissionTypes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.PermissionTypes.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.PermissionTypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.PermissionTypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.PermissionTypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    typesList: jspb.Message.toObjectList(msg.getTypesList(),
    proto.org.apache.custos.sharing.service.PermissionType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypes}
 */
proto.org.apache.custos.sharing.service.PermissionTypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.PermissionTypes;
  return proto.org.apache.custos.sharing.service.PermissionTypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.PermissionTypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypes}
 */
proto.org.apache.custos.sharing.service.PermissionTypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.org.apache.custos.sharing.service.PermissionType;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.PermissionType.deserializeBinaryFromReader);
      msg.addTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.PermissionTypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.PermissionTypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.PermissionTypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.PermissionTypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.org.apache.custos.sharing.service.PermissionType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PermissionType types = 1;
 * @return {!Array<!proto.org.apache.custos.sharing.service.PermissionType>}
 */
proto.org.apache.custos.sharing.service.PermissionTypes.prototype.getTypesList = function() {
  return /** @type{!Array<!proto.org.apache.custos.sharing.service.PermissionType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.org.apache.custos.sharing.service.PermissionType, 1));
};


/**
 * @param {!Array<!proto.org.apache.custos.sharing.service.PermissionType>} value
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypes} returns this
*/
proto.org.apache.custos.sharing.service.PermissionTypes.prototype.setTypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.org.apache.custos.sharing.service.PermissionType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.org.apache.custos.sharing.service.PermissionType}
 */
proto.org.apache.custos.sharing.service.PermissionTypes.prototype.addTypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.org.apache.custos.sharing.service.PermissionType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.custos.sharing.service.PermissionTypes} returns this
 */
proto.org.apache.custos.sharing.service.PermissionTypes.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.custos.sharing.service.Entities.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.Entities.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.Entities.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.Entities} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.Entities.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityArrayList: jspb.Message.toObjectList(msg.getEntityArrayList(),
    proto.org.apache.custos.sharing.service.Entity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.Entities}
 */
proto.org.apache.custos.sharing.service.Entities.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.Entities;
  return proto.org.apache.custos.sharing.service.Entities.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.Entities} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.Entities}
 */
proto.org.apache.custos.sharing.service.Entities.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.org.apache.custos.sharing.service.Entity;
      reader.readMessage(value,proto.org.apache.custos.sharing.service.Entity.deserializeBinaryFromReader);
      msg.addEntityArray(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.Entities.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.Entities.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.Entities} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.Entities.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityArrayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.org.apache.custos.sharing.service.Entity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Entity entity_array = 1;
 * @return {!Array<!proto.org.apache.custos.sharing.service.Entity>}
 */
proto.org.apache.custos.sharing.service.Entities.prototype.getEntityArrayList = function() {
  return /** @type{!Array<!proto.org.apache.custos.sharing.service.Entity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.org.apache.custos.sharing.service.Entity, 1));
};


/**
 * @param {!Array<!proto.org.apache.custos.sharing.service.Entity>} value
 * @return {!proto.org.apache.custos.sharing.service.Entities} returns this
*/
proto.org.apache.custos.sharing.service.Entities.prototype.setEntityArrayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.org.apache.custos.sharing.service.Entity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.org.apache.custos.sharing.service.Entity}
 */
proto.org.apache.custos.sharing.service.Entities.prototype.addEntityArray = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.org.apache.custos.sharing.service.Entity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.custos.sharing.service.Entities} returns this
 */
proto.org.apache.custos.sharing.service.Entities.prototype.clearEntityArrayList = function() {
  return this.setEntityArrayList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.custos.sharing.service.SharedOwners.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.custos.sharing.service.SharedOwners.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.custos.sharing.service.SharedOwners.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.custos.sharing.service.SharedOwners} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.SharedOwners.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownerIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.custos.sharing.service.SharedOwners}
 */
proto.org.apache.custos.sharing.service.SharedOwners.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.custos.sharing.service.SharedOwners;
  return proto.org.apache.custos.sharing.service.SharedOwners.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.custos.sharing.service.SharedOwners} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.custos.sharing.service.SharedOwners}
 */
proto.org.apache.custos.sharing.service.SharedOwners.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addOwnerIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.custos.sharing.service.SharedOwners.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.custos.sharing.service.SharedOwners.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.custos.sharing.service.SharedOwners} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.custos.sharing.service.SharedOwners.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnerIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string owner_ids = 1;
 * @return {!Array<string>}
 */
proto.org.apache.custos.sharing.service.SharedOwners.prototype.getOwnerIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.org.apache.custos.sharing.service.SharedOwners} returns this
 */
proto.org.apache.custos.sharing.service.SharedOwners.prototype.setOwnerIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.org.apache.custos.sharing.service.SharedOwners} returns this
 */
proto.org.apache.custos.sharing.service.SharedOwners.prototype.addOwnerIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.custos.sharing.service.SharedOwners} returns this
 */
proto.org.apache.custos.sharing.service.SharedOwners.prototype.clearOwnerIdsList = function() {
  return this.setOwnerIdsList([]);
};


/**
 * @enum {number}
 */
proto.org.apache.custos.sharing.service.SearchCondition = {
  EQUAL: 0,
  LIKE: 1,
  GTE: 2,
  LTE: 3,
  NOT: 4
};

/**
 * @enum {number}
 */
proto.org.apache.custos.sharing.service.EntitySearchField = {
  NAME: 0,
  DESCRIPTION: 1,
  ID: 2,
  FULL_TEXT: 3,
  OWNER_ID: 4,
  CREATED_AT: 5,
  LAST_MODIFIED_AT: 6,
  ENTITY_TYPE_ID: 7,
  PARENT_ID: 8,
  SHARED_COUNT: 9
};

goog.object.extend(exports, proto.org.apache.custos.sharing.service);
