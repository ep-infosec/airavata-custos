/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.custos.sharing.management.service;
option go_package = "./pb";

import "SharingService.proto";
import "google/api/annotations.proto";


service SharingManagementService {


    rpc createEntityType (org.apache.custos.sharing.service.EntityTypeRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           post: "/sharing-management/v1.0.0/entity/type"
        };

    }
    rpc updateEntityType (org.apache.custos.sharing.service.EntityTypeRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           put: "/sharing-management/v1.0.0/entity/type"
        };

    }
    rpc deleteEntityType (org.apache.custos.sharing.service.EntityTypeRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           delete: "/sharing-management/v1.0.0/entity/type"
        };

    }
    rpc getEntityType (org.apache.custos.sharing.service.EntityTypeRequest) returns (org.apache.custos.sharing.service.EntityType) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/entity/type"
        };

    }
    rpc getEntityTypes (org.apache.custos.sharing.service.SearchRequest) returns (org.apache.custos.sharing.service.EntityTypes) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/entity/types"
        };

    }

    rpc createPermissionType (org.apache.custos.sharing.service.PermissionTypeRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           post: "/sharing-management/v1.0.0/permission/type"
        };

    }
    rpc updatePermissionType (org.apache.custos.sharing.service.PermissionTypeRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           put: "/sharing-management/v1.0.0/permission/type"
        };

    }
    rpc deletePermissionType (org.apache.custos.sharing.service.PermissionTypeRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           delete: "/sharing-management/v1.0.0/permission/type"
        };

    }
    rpc getPermissionType (org.apache.custos.sharing.service.PermissionTypeRequest) returns (org.apache.custos.sharing.service.PermissionType) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/permission/type"
        };

    }
    rpc getPermissionTypes (org.apache.custos.sharing.service.SearchRequest) returns (org.apache.custos.sharing.service.PermissionTypes) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/permission/types"
        };

    }

    rpc createEntity (org.apache.custos.sharing.service.EntityRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           post: "/sharing-management/v1.0.0/entity"
        };

    }
    rpc updateEntity (org.apache.custos.sharing.service.EntityRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           put: "/sharing-management/v1.0.0/entity"
        };

    }
    rpc isEntityExists (org.apache.custos.sharing.service.EntityRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/entity/existence"
        };

    }
    rpc getEntity (org.apache.custos.sharing.service.EntityRequest) returns (org.apache.custos.sharing.service.Entity) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/entity"
        };

    }
    rpc deleteEntity (org.apache.custos.sharing.service.EntityRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           delete: "/sharing-management/v1.0.0/entity"
        };

    }
    rpc searchEntities (org.apache.custos.sharing.service.SearchRequest) returns (org.apache.custos.sharing.service.Entities) {
        option (google.api.http) = {
           post: "/sharing-management/v1.0.0/entities"
        };

    }


    rpc getListOfSharedUsers (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.SharedOwners) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/users/share"
        };

    }
    rpc getListOfDirectlySharedUsers (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.SharedOwners) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/users/share/direct"
        };

    }
    rpc getListOfSharedGroups (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.SharedOwners) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/groups/share"
        };

    }
    rpc getListOfDirectlySharedGroups (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.SharedOwners) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/groups/share/direct"
        };

    }

    rpc getAllDirectSharings (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.GetAllDirectSharingsResponse) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/share/direct"
        };

    }

    rpc getAllSharings (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.GetAllSharingsResponse) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/share"
        };

    }

    rpc shareEntityWithUsers (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           post: "/sharing-management/v1.0.0/users/share"
        };

    }
    rpc shareEntityWithGroups (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           post: "/sharing-management/v1.0.0/groups/share"
        };

    }
    rpc revokeEntitySharingFromUsers (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           delete: "/sharing-management/v1.0.0/users/share"
        };

    }
    rpc revokeEntitySharingFromGroups (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           delete: "/sharing-management/v1.0.0/groups/share"
        };

    }
    rpc userHasAccess (org.apache.custos.sharing.service.SharingRequest) returns (org.apache.custos.sharing.service.Status) {
        option (google.api.http) = {
           get: "/sharing-management/v1.0.0/entity/user/access"
        };

    }



}