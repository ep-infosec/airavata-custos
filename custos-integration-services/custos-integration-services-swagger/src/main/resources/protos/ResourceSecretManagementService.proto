/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.custos.resource.secret.management.service;
option go_package = "./pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "ResourceSecretService.proto";
import "IdentityService.proto";


service ResourceSecretManagementService {

    rpc getSecret (org.apache.custos.resource.secret.service.GetSecretRequest) returns (org.apache.custos.resource.secret.service.SecretMetadata) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/secret"
         };
    }

    rpc getKVCredential (org.apache.custos.resource.secret.service.KVCredential) returns (org.apache.custos.resource.secret.service.KVCredential) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/secret/kv"
         };
    }
    rpc addKVCredential (org.apache.custos.resource.secret.service.KVCredential) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           post: "/resource-secret-management/v1.0.0/secret/kv"
         };
    }
    rpc updateKVCredential (org.apache.custos.resource.secret.service.KVCredential) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           put: "/resource-secret-management/v1.0.0/secret/kv"
         };
    }
    rpc deleteKVCredential (org.apache.custos.resource.secret.service.KVCredential) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           delete: "/resource-secret-management/v1.0.0/secret/kv"
         };
    }

    rpc getJWKS (org.apache.custos.identity.service.GetJWKSRequest) returns (google.protobuf.Struct) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/openid-connect/certs"
         };
    }

    rpc getResourceCredentialSummary (org.apache.custos.resource.secret.service.GetResourceCredentialByTokenRequest) returns (org.apache.custos.resource.secret.service.SecretMetadata) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/secret/summary"
         };
    }
    rpc getAllResourceCredentialSummaries (org.apache.custos.resource.secret.service.GetResourceCredentialSummariesRequest) returns (org.apache.custos.resource.secret.service.ResourceCredentialSummaries) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/secret/summaries"
         };
    }
    rpc addSSHCredential (org.apache.custos.resource.secret.service.SSHCredential) returns (org.apache.custos.resource.secret.service.AddResourceCredentialResponse) {
        option (google.api.http) = {
           post: "/resource-secret-management/v1.0.0/secret/ssh"
         };
    }
    rpc addPasswordCredential (org.apache.custos.resource.secret.service.PasswordCredential) returns (org.apache.custos.resource.secret.service.AddResourceCredentialResponse) {
        option (google.api.http) = {
           post: "/resource-secret-management/v1.0.0/secret/password"
         };
    }
    rpc addCertificateCredential (org.apache.custos.resource.secret.service.CertificateCredential) returns (org.apache.custos.resource.secret.service.AddResourceCredentialResponse) {
        option (google.api.http) = {
           post: "/resource-secret-management/v1.0.0/secret/certificate"
         };
    }

    rpc updateCertificateCredential (org.apache.custos.resource.secret.service.CertificateCredential) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           put: "/resource-secret-management/v1.0.0/secret/certificate"
         };
    }

    rpc getSSHCredential (org.apache.custos.resource.secret.service.GetResourceCredentialByTokenRequest) returns (org.apache.custos.resource.secret.service.SSHCredential) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/secret/ssh"
         };
    }
    rpc getPasswordCredential (org.apache.custos.resource.secret.service.GetResourceCredentialByTokenRequest) returns (org.apache.custos.resource.secret.service.PasswordCredential) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/secret/password"
         };
    }
    rpc getCertificateCredential (org.apache.custos.resource.secret.service.GetResourceCredentialByTokenRequest) returns (org.apache.custos.resource.secret.service.CertificateCredential) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/secret/certificate"
         };
    }

    rpc deleteSSHCredential (org.apache.custos.resource.secret.service.GetResourceCredentialByTokenRequest) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           delete: "/resource-secret-management/v1.0.0/secret/ssh"
         };
    }
    rpc deletePWDCredential (org.apache.custos.resource.secret.service.GetResourceCredentialByTokenRequest) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           delete: "/resource-secret-management/v1.0.0/secret/password"
         };
    }
    rpc deleteCertificateCredential (org.apache.custos.resource.secret.service.GetResourceCredentialByTokenRequest) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           delete: "/resource-secret-management/v1.0.0/secret/certificate"
         };
    }



    rpc getCredentialMap (org.apache.custos.resource.secret.service.CredentialMap) returns (org.apache.custos.resource.secret.service.CredentialMap) {
        option (google.api.http) = {
           get: "/resource-secret-management/v1.0.0/secret/map"
         };
    }
    rpc addCredentialMap (org.apache.custos.resource.secret.service.CredentialMap) returns (org.apache.custos.resource.secret.service.AddResourceCredentialResponse) {
        option (google.api.http) = {
           post: "/resource-secret-management/v1.0.0/secret/map"
         };
    }
    rpc updateCredentialMap (org.apache.custos.resource.secret.service.CredentialMap) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           put: "/resource-secret-management/v1.0.0/secret/map"
         };
    }
    rpc deleteCredentialMap (org.apache.custos.resource.secret.service.CredentialMap) returns (org.apache.custos.resource.secret.service.ResourceCredentialOperationStatus) {
        option (google.api.http) = {
           delete: "/resource-secret-management/v1.0.0/secret/map"
         };
    }

}